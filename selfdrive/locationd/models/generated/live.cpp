#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5864220398347747596) {
   out_5864220398347747596[0] = 0;
   out_5864220398347747596[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5864220398347747596[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5864220398347747596[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5864220398347747596[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5864220398347747596[5] = -sin(in_vec[1]);
   out_5864220398347747596[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5864220398347747596[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5864220398347747596[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5864220398347747596[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5864220398347747596[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5864220398347747596[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5864220398347747596[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5864220398347747596[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5864220398347747596[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5864220398347747596[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5864220398347747596[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5864220398347747596[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2500085137790340427) {
   out_2500085137790340427[0] = delta_x[0] + nom_x[0];
   out_2500085137790340427[1] = delta_x[1] + nom_x[1];
   out_2500085137790340427[2] = delta_x[2] + nom_x[2];
   out_2500085137790340427[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2500085137790340427[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2500085137790340427[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2500085137790340427[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2500085137790340427[7] = delta_x[6] + nom_x[7];
   out_2500085137790340427[8] = delta_x[7] + nom_x[8];
   out_2500085137790340427[9] = delta_x[8] + nom_x[9];
   out_2500085137790340427[10] = delta_x[9] + nom_x[10];
   out_2500085137790340427[11] = delta_x[10] + nom_x[11];
   out_2500085137790340427[12] = delta_x[11] + nom_x[12];
   out_2500085137790340427[13] = delta_x[12] + nom_x[13];
   out_2500085137790340427[14] = delta_x[13] + nom_x[14];
   out_2500085137790340427[15] = delta_x[14] + nom_x[15];
   out_2500085137790340427[16] = delta_x[15] + nom_x[16];
   out_2500085137790340427[17] = delta_x[16] + nom_x[17];
   out_2500085137790340427[18] = delta_x[17] + nom_x[18];
   out_2500085137790340427[19] = delta_x[18] + nom_x[19];
   out_2500085137790340427[20] = delta_x[19] + nom_x[20];
   out_2500085137790340427[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5850215098972926867) {
   out_5850215098972926867[0] = -nom_x[0] + true_x[0];
   out_5850215098972926867[1] = -nom_x[1] + true_x[1];
   out_5850215098972926867[2] = -nom_x[2] + true_x[2];
   out_5850215098972926867[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5850215098972926867[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5850215098972926867[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5850215098972926867[6] = -nom_x[7] + true_x[7];
   out_5850215098972926867[7] = -nom_x[8] + true_x[8];
   out_5850215098972926867[8] = -nom_x[9] + true_x[9];
   out_5850215098972926867[9] = -nom_x[10] + true_x[10];
   out_5850215098972926867[10] = -nom_x[11] + true_x[11];
   out_5850215098972926867[11] = -nom_x[12] + true_x[12];
   out_5850215098972926867[12] = -nom_x[13] + true_x[13];
   out_5850215098972926867[13] = -nom_x[14] + true_x[14];
   out_5850215098972926867[14] = -nom_x[15] + true_x[15];
   out_5850215098972926867[15] = -nom_x[16] + true_x[16];
   out_5850215098972926867[16] = -nom_x[17] + true_x[17];
   out_5850215098972926867[17] = -nom_x[18] + true_x[18];
   out_5850215098972926867[18] = -nom_x[19] + true_x[19];
   out_5850215098972926867[19] = -nom_x[20] + true_x[20];
   out_5850215098972926867[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8835204987853825536) {
   out_8835204987853825536[0] = 1.0;
   out_8835204987853825536[1] = 0;
   out_8835204987853825536[2] = 0;
   out_8835204987853825536[3] = 0;
   out_8835204987853825536[4] = 0;
   out_8835204987853825536[5] = 0;
   out_8835204987853825536[6] = 0;
   out_8835204987853825536[7] = 0;
   out_8835204987853825536[8] = 0;
   out_8835204987853825536[9] = 0;
   out_8835204987853825536[10] = 0;
   out_8835204987853825536[11] = 0;
   out_8835204987853825536[12] = 0;
   out_8835204987853825536[13] = 0;
   out_8835204987853825536[14] = 0;
   out_8835204987853825536[15] = 0;
   out_8835204987853825536[16] = 0;
   out_8835204987853825536[17] = 0;
   out_8835204987853825536[18] = 0;
   out_8835204987853825536[19] = 0;
   out_8835204987853825536[20] = 0;
   out_8835204987853825536[21] = 0;
   out_8835204987853825536[22] = 1.0;
   out_8835204987853825536[23] = 0;
   out_8835204987853825536[24] = 0;
   out_8835204987853825536[25] = 0;
   out_8835204987853825536[26] = 0;
   out_8835204987853825536[27] = 0;
   out_8835204987853825536[28] = 0;
   out_8835204987853825536[29] = 0;
   out_8835204987853825536[30] = 0;
   out_8835204987853825536[31] = 0;
   out_8835204987853825536[32] = 0;
   out_8835204987853825536[33] = 0;
   out_8835204987853825536[34] = 0;
   out_8835204987853825536[35] = 0;
   out_8835204987853825536[36] = 0;
   out_8835204987853825536[37] = 0;
   out_8835204987853825536[38] = 0;
   out_8835204987853825536[39] = 0;
   out_8835204987853825536[40] = 0;
   out_8835204987853825536[41] = 0;
   out_8835204987853825536[42] = 0;
   out_8835204987853825536[43] = 0;
   out_8835204987853825536[44] = 1.0;
   out_8835204987853825536[45] = 0;
   out_8835204987853825536[46] = 0;
   out_8835204987853825536[47] = 0;
   out_8835204987853825536[48] = 0;
   out_8835204987853825536[49] = 0;
   out_8835204987853825536[50] = 0;
   out_8835204987853825536[51] = 0;
   out_8835204987853825536[52] = 0;
   out_8835204987853825536[53] = 0;
   out_8835204987853825536[54] = 0;
   out_8835204987853825536[55] = 0;
   out_8835204987853825536[56] = 0;
   out_8835204987853825536[57] = 0;
   out_8835204987853825536[58] = 0;
   out_8835204987853825536[59] = 0;
   out_8835204987853825536[60] = 0;
   out_8835204987853825536[61] = 0;
   out_8835204987853825536[62] = 0;
   out_8835204987853825536[63] = 0;
   out_8835204987853825536[64] = 0;
   out_8835204987853825536[65] = 0;
   out_8835204987853825536[66] = -0.5*state[4];
   out_8835204987853825536[67] = -0.5*state[5];
   out_8835204987853825536[68] = -0.5*state[6];
   out_8835204987853825536[69] = 0;
   out_8835204987853825536[70] = 0;
   out_8835204987853825536[71] = 0;
   out_8835204987853825536[72] = 0;
   out_8835204987853825536[73] = 0;
   out_8835204987853825536[74] = 0;
   out_8835204987853825536[75] = 0;
   out_8835204987853825536[76] = 0;
   out_8835204987853825536[77] = 0;
   out_8835204987853825536[78] = 0;
   out_8835204987853825536[79] = 0;
   out_8835204987853825536[80] = 0;
   out_8835204987853825536[81] = 0;
   out_8835204987853825536[82] = 0;
   out_8835204987853825536[83] = 0;
   out_8835204987853825536[84] = 0;
   out_8835204987853825536[85] = 0;
   out_8835204987853825536[86] = 0;
   out_8835204987853825536[87] = 0.5*state[3];
   out_8835204987853825536[88] = 0.5*state[6];
   out_8835204987853825536[89] = -0.5*state[5];
   out_8835204987853825536[90] = 0;
   out_8835204987853825536[91] = 0;
   out_8835204987853825536[92] = 0;
   out_8835204987853825536[93] = 0;
   out_8835204987853825536[94] = 0;
   out_8835204987853825536[95] = 0;
   out_8835204987853825536[96] = 0;
   out_8835204987853825536[97] = 0;
   out_8835204987853825536[98] = 0;
   out_8835204987853825536[99] = 0;
   out_8835204987853825536[100] = 0;
   out_8835204987853825536[101] = 0;
   out_8835204987853825536[102] = 0;
   out_8835204987853825536[103] = 0;
   out_8835204987853825536[104] = 0;
   out_8835204987853825536[105] = 0;
   out_8835204987853825536[106] = 0;
   out_8835204987853825536[107] = 0;
   out_8835204987853825536[108] = -0.5*state[6];
   out_8835204987853825536[109] = 0.5*state[3];
   out_8835204987853825536[110] = 0.5*state[4];
   out_8835204987853825536[111] = 0;
   out_8835204987853825536[112] = 0;
   out_8835204987853825536[113] = 0;
   out_8835204987853825536[114] = 0;
   out_8835204987853825536[115] = 0;
   out_8835204987853825536[116] = 0;
   out_8835204987853825536[117] = 0;
   out_8835204987853825536[118] = 0;
   out_8835204987853825536[119] = 0;
   out_8835204987853825536[120] = 0;
   out_8835204987853825536[121] = 0;
   out_8835204987853825536[122] = 0;
   out_8835204987853825536[123] = 0;
   out_8835204987853825536[124] = 0;
   out_8835204987853825536[125] = 0;
   out_8835204987853825536[126] = 0;
   out_8835204987853825536[127] = 0;
   out_8835204987853825536[128] = 0;
   out_8835204987853825536[129] = 0.5*state[5];
   out_8835204987853825536[130] = -0.5*state[4];
   out_8835204987853825536[131] = 0.5*state[3];
   out_8835204987853825536[132] = 0;
   out_8835204987853825536[133] = 0;
   out_8835204987853825536[134] = 0;
   out_8835204987853825536[135] = 0;
   out_8835204987853825536[136] = 0;
   out_8835204987853825536[137] = 0;
   out_8835204987853825536[138] = 0;
   out_8835204987853825536[139] = 0;
   out_8835204987853825536[140] = 0;
   out_8835204987853825536[141] = 0;
   out_8835204987853825536[142] = 0;
   out_8835204987853825536[143] = 0;
   out_8835204987853825536[144] = 0;
   out_8835204987853825536[145] = 0;
   out_8835204987853825536[146] = 0;
   out_8835204987853825536[147] = 0;
   out_8835204987853825536[148] = 0;
   out_8835204987853825536[149] = 0;
   out_8835204987853825536[150] = 0;
   out_8835204987853825536[151] = 0;
   out_8835204987853825536[152] = 0;
   out_8835204987853825536[153] = 1.0;
   out_8835204987853825536[154] = 0;
   out_8835204987853825536[155] = 0;
   out_8835204987853825536[156] = 0;
   out_8835204987853825536[157] = 0;
   out_8835204987853825536[158] = 0;
   out_8835204987853825536[159] = 0;
   out_8835204987853825536[160] = 0;
   out_8835204987853825536[161] = 0;
   out_8835204987853825536[162] = 0;
   out_8835204987853825536[163] = 0;
   out_8835204987853825536[164] = 0;
   out_8835204987853825536[165] = 0;
   out_8835204987853825536[166] = 0;
   out_8835204987853825536[167] = 0;
   out_8835204987853825536[168] = 0;
   out_8835204987853825536[169] = 0;
   out_8835204987853825536[170] = 0;
   out_8835204987853825536[171] = 0;
   out_8835204987853825536[172] = 0;
   out_8835204987853825536[173] = 0;
   out_8835204987853825536[174] = 0;
   out_8835204987853825536[175] = 1.0;
   out_8835204987853825536[176] = 0;
   out_8835204987853825536[177] = 0;
   out_8835204987853825536[178] = 0;
   out_8835204987853825536[179] = 0;
   out_8835204987853825536[180] = 0;
   out_8835204987853825536[181] = 0;
   out_8835204987853825536[182] = 0;
   out_8835204987853825536[183] = 0;
   out_8835204987853825536[184] = 0;
   out_8835204987853825536[185] = 0;
   out_8835204987853825536[186] = 0;
   out_8835204987853825536[187] = 0;
   out_8835204987853825536[188] = 0;
   out_8835204987853825536[189] = 0;
   out_8835204987853825536[190] = 0;
   out_8835204987853825536[191] = 0;
   out_8835204987853825536[192] = 0;
   out_8835204987853825536[193] = 0;
   out_8835204987853825536[194] = 0;
   out_8835204987853825536[195] = 0;
   out_8835204987853825536[196] = 0;
   out_8835204987853825536[197] = 1.0;
   out_8835204987853825536[198] = 0;
   out_8835204987853825536[199] = 0;
   out_8835204987853825536[200] = 0;
   out_8835204987853825536[201] = 0;
   out_8835204987853825536[202] = 0;
   out_8835204987853825536[203] = 0;
   out_8835204987853825536[204] = 0;
   out_8835204987853825536[205] = 0;
   out_8835204987853825536[206] = 0;
   out_8835204987853825536[207] = 0;
   out_8835204987853825536[208] = 0;
   out_8835204987853825536[209] = 0;
   out_8835204987853825536[210] = 0;
   out_8835204987853825536[211] = 0;
   out_8835204987853825536[212] = 0;
   out_8835204987853825536[213] = 0;
   out_8835204987853825536[214] = 0;
   out_8835204987853825536[215] = 0;
   out_8835204987853825536[216] = 0;
   out_8835204987853825536[217] = 0;
   out_8835204987853825536[218] = 0;
   out_8835204987853825536[219] = 1.0;
   out_8835204987853825536[220] = 0;
   out_8835204987853825536[221] = 0;
   out_8835204987853825536[222] = 0;
   out_8835204987853825536[223] = 0;
   out_8835204987853825536[224] = 0;
   out_8835204987853825536[225] = 0;
   out_8835204987853825536[226] = 0;
   out_8835204987853825536[227] = 0;
   out_8835204987853825536[228] = 0;
   out_8835204987853825536[229] = 0;
   out_8835204987853825536[230] = 0;
   out_8835204987853825536[231] = 0;
   out_8835204987853825536[232] = 0;
   out_8835204987853825536[233] = 0;
   out_8835204987853825536[234] = 0;
   out_8835204987853825536[235] = 0;
   out_8835204987853825536[236] = 0;
   out_8835204987853825536[237] = 0;
   out_8835204987853825536[238] = 0;
   out_8835204987853825536[239] = 0;
   out_8835204987853825536[240] = 0;
   out_8835204987853825536[241] = 1.0;
   out_8835204987853825536[242] = 0;
   out_8835204987853825536[243] = 0;
   out_8835204987853825536[244] = 0;
   out_8835204987853825536[245] = 0;
   out_8835204987853825536[246] = 0;
   out_8835204987853825536[247] = 0;
   out_8835204987853825536[248] = 0;
   out_8835204987853825536[249] = 0;
   out_8835204987853825536[250] = 0;
   out_8835204987853825536[251] = 0;
   out_8835204987853825536[252] = 0;
   out_8835204987853825536[253] = 0;
   out_8835204987853825536[254] = 0;
   out_8835204987853825536[255] = 0;
   out_8835204987853825536[256] = 0;
   out_8835204987853825536[257] = 0;
   out_8835204987853825536[258] = 0;
   out_8835204987853825536[259] = 0;
   out_8835204987853825536[260] = 0;
   out_8835204987853825536[261] = 0;
   out_8835204987853825536[262] = 0;
   out_8835204987853825536[263] = 1.0;
   out_8835204987853825536[264] = 0;
   out_8835204987853825536[265] = 0;
   out_8835204987853825536[266] = 0;
   out_8835204987853825536[267] = 0;
   out_8835204987853825536[268] = 0;
   out_8835204987853825536[269] = 0;
   out_8835204987853825536[270] = 0;
   out_8835204987853825536[271] = 0;
   out_8835204987853825536[272] = 0;
   out_8835204987853825536[273] = 0;
   out_8835204987853825536[274] = 0;
   out_8835204987853825536[275] = 0;
   out_8835204987853825536[276] = 0;
   out_8835204987853825536[277] = 0;
   out_8835204987853825536[278] = 0;
   out_8835204987853825536[279] = 0;
   out_8835204987853825536[280] = 0;
   out_8835204987853825536[281] = 0;
   out_8835204987853825536[282] = 0;
   out_8835204987853825536[283] = 0;
   out_8835204987853825536[284] = 0;
   out_8835204987853825536[285] = 1.0;
   out_8835204987853825536[286] = 0;
   out_8835204987853825536[287] = 0;
   out_8835204987853825536[288] = 0;
   out_8835204987853825536[289] = 0;
   out_8835204987853825536[290] = 0;
   out_8835204987853825536[291] = 0;
   out_8835204987853825536[292] = 0;
   out_8835204987853825536[293] = 0;
   out_8835204987853825536[294] = 0;
   out_8835204987853825536[295] = 0;
   out_8835204987853825536[296] = 0;
   out_8835204987853825536[297] = 0;
   out_8835204987853825536[298] = 0;
   out_8835204987853825536[299] = 0;
   out_8835204987853825536[300] = 0;
   out_8835204987853825536[301] = 0;
   out_8835204987853825536[302] = 0;
   out_8835204987853825536[303] = 0;
   out_8835204987853825536[304] = 0;
   out_8835204987853825536[305] = 0;
   out_8835204987853825536[306] = 0;
   out_8835204987853825536[307] = 1.0;
   out_8835204987853825536[308] = 0;
   out_8835204987853825536[309] = 0;
   out_8835204987853825536[310] = 0;
   out_8835204987853825536[311] = 0;
   out_8835204987853825536[312] = 0;
   out_8835204987853825536[313] = 0;
   out_8835204987853825536[314] = 0;
   out_8835204987853825536[315] = 0;
   out_8835204987853825536[316] = 0;
   out_8835204987853825536[317] = 0;
   out_8835204987853825536[318] = 0;
   out_8835204987853825536[319] = 0;
   out_8835204987853825536[320] = 0;
   out_8835204987853825536[321] = 0;
   out_8835204987853825536[322] = 0;
   out_8835204987853825536[323] = 0;
   out_8835204987853825536[324] = 0;
   out_8835204987853825536[325] = 0;
   out_8835204987853825536[326] = 0;
   out_8835204987853825536[327] = 0;
   out_8835204987853825536[328] = 0;
   out_8835204987853825536[329] = 1.0;
   out_8835204987853825536[330] = 0;
   out_8835204987853825536[331] = 0;
   out_8835204987853825536[332] = 0;
   out_8835204987853825536[333] = 0;
   out_8835204987853825536[334] = 0;
   out_8835204987853825536[335] = 0;
   out_8835204987853825536[336] = 0;
   out_8835204987853825536[337] = 0;
   out_8835204987853825536[338] = 0;
   out_8835204987853825536[339] = 0;
   out_8835204987853825536[340] = 0;
   out_8835204987853825536[341] = 0;
   out_8835204987853825536[342] = 0;
   out_8835204987853825536[343] = 0;
   out_8835204987853825536[344] = 0;
   out_8835204987853825536[345] = 0;
   out_8835204987853825536[346] = 0;
   out_8835204987853825536[347] = 0;
   out_8835204987853825536[348] = 0;
   out_8835204987853825536[349] = 0;
   out_8835204987853825536[350] = 0;
   out_8835204987853825536[351] = 1.0;
   out_8835204987853825536[352] = 0;
   out_8835204987853825536[353] = 0;
   out_8835204987853825536[354] = 0;
   out_8835204987853825536[355] = 0;
   out_8835204987853825536[356] = 0;
   out_8835204987853825536[357] = 0;
   out_8835204987853825536[358] = 0;
   out_8835204987853825536[359] = 0;
   out_8835204987853825536[360] = 0;
   out_8835204987853825536[361] = 0;
   out_8835204987853825536[362] = 0;
   out_8835204987853825536[363] = 0;
   out_8835204987853825536[364] = 0;
   out_8835204987853825536[365] = 0;
   out_8835204987853825536[366] = 0;
   out_8835204987853825536[367] = 0;
   out_8835204987853825536[368] = 0;
   out_8835204987853825536[369] = 0;
   out_8835204987853825536[370] = 0;
   out_8835204987853825536[371] = 0;
   out_8835204987853825536[372] = 0;
   out_8835204987853825536[373] = 1.0;
   out_8835204987853825536[374] = 0;
   out_8835204987853825536[375] = 0;
   out_8835204987853825536[376] = 0;
   out_8835204987853825536[377] = 0;
   out_8835204987853825536[378] = 0;
   out_8835204987853825536[379] = 0;
   out_8835204987853825536[380] = 0;
   out_8835204987853825536[381] = 0;
   out_8835204987853825536[382] = 0;
   out_8835204987853825536[383] = 0;
   out_8835204987853825536[384] = 0;
   out_8835204987853825536[385] = 0;
   out_8835204987853825536[386] = 0;
   out_8835204987853825536[387] = 0;
   out_8835204987853825536[388] = 0;
   out_8835204987853825536[389] = 0;
   out_8835204987853825536[390] = 0;
   out_8835204987853825536[391] = 0;
   out_8835204987853825536[392] = 0;
   out_8835204987853825536[393] = 0;
   out_8835204987853825536[394] = 0;
   out_8835204987853825536[395] = 1.0;
   out_8835204987853825536[396] = 0;
   out_8835204987853825536[397] = 0;
   out_8835204987853825536[398] = 0;
   out_8835204987853825536[399] = 0;
   out_8835204987853825536[400] = 0;
   out_8835204987853825536[401] = 0;
   out_8835204987853825536[402] = 0;
   out_8835204987853825536[403] = 0;
   out_8835204987853825536[404] = 0;
   out_8835204987853825536[405] = 0;
   out_8835204987853825536[406] = 0;
   out_8835204987853825536[407] = 0;
   out_8835204987853825536[408] = 0;
   out_8835204987853825536[409] = 0;
   out_8835204987853825536[410] = 0;
   out_8835204987853825536[411] = 0;
   out_8835204987853825536[412] = 0;
   out_8835204987853825536[413] = 0;
   out_8835204987853825536[414] = 0;
   out_8835204987853825536[415] = 0;
   out_8835204987853825536[416] = 0;
   out_8835204987853825536[417] = 1.0;
   out_8835204987853825536[418] = 0;
   out_8835204987853825536[419] = 0;
   out_8835204987853825536[420] = 0;
   out_8835204987853825536[421] = 0;
   out_8835204987853825536[422] = 0;
   out_8835204987853825536[423] = 0;
   out_8835204987853825536[424] = 0;
   out_8835204987853825536[425] = 0;
   out_8835204987853825536[426] = 0;
   out_8835204987853825536[427] = 0;
   out_8835204987853825536[428] = 0;
   out_8835204987853825536[429] = 0;
   out_8835204987853825536[430] = 0;
   out_8835204987853825536[431] = 0;
   out_8835204987853825536[432] = 0;
   out_8835204987853825536[433] = 0;
   out_8835204987853825536[434] = 0;
   out_8835204987853825536[435] = 0;
   out_8835204987853825536[436] = 0;
   out_8835204987853825536[437] = 0;
   out_8835204987853825536[438] = 0;
   out_8835204987853825536[439] = 1.0;
   out_8835204987853825536[440] = 0;
   out_8835204987853825536[441] = 0;
   out_8835204987853825536[442] = 0;
   out_8835204987853825536[443] = 0;
   out_8835204987853825536[444] = 0;
   out_8835204987853825536[445] = 0;
   out_8835204987853825536[446] = 0;
   out_8835204987853825536[447] = 0;
   out_8835204987853825536[448] = 0;
   out_8835204987853825536[449] = 0;
   out_8835204987853825536[450] = 0;
   out_8835204987853825536[451] = 0;
   out_8835204987853825536[452] = 0;
   out_8835204987853825536[453] = 0;
   out_8835204987853825536[454] = 0;
   out_8835204987853825536[455] = 0;
   out_8835204987853825536[456] = 0;
   out_8835204987853825536[457] = 0;
   out_8835204987853825536[458] = 0;
   out_8835204987853825536[459] = 0;
   out_8835204987853825536[460] = 0;
   out_8835204987853825536[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_127607991900174595) {
   out_127607991900174595[0] = dt*state[7] + state[0];
   out_127607991900174595[1] = dt*state[8] + state[1];
   out_127607991900174595[2] = dt*state[9] + state[2];
   out_127607991900174595[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_127607991900174595[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_127607991900174595[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_127607991900174595[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_127607991900174595[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_127607991900174595[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_127607991900174595[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_127607991900174595[10] = state[10];
   out_127607991900174595[11] = state[11];
   out_127607991900174595[12] = state[12];
   out_127607991900174595[13] = state[13];
   out_127607991900174595[14] = state[14];
   out_127607991900174595[15] = state[15];
   out_127607991900174595[16] = state[16];
   out_127607991900174595[17] = state[17];
   out_127607991900174595[18] = state[18];
   out_127607991900174595[19] = state[19];
   out_127607991900174595[20] = state[20];
   out_127607991900174595[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5480754559180280437) {
   out_5480754559180280437[0] = 1;
   out_5480754559180280437[1] = 0;
   out_5480754559180280437[2] = 0;
   out_5480754559180280437[3] = 0;
   out_5480754559180280437[4] = 0;
   out_5480754559180280437[5] = 0;
   out_5480754559180280437[6] = dt;
   out_5480754559180280437[7] = 0;
   out_5480754559180280437[8] = 0;
   out_5480754559180280437[9] = 0;
   out_5480754559180280437[10] = 0;
   out_5480754559180280437[11] = 0;
   out_5480754559180280437[12] = 0;
   out_5480754559180280437[13] = 0;
   out_5480754559180280437[14] = 0;
   out_5480754559180280437[15] = 0;
   out_5480754559180280437[16] = 0;
   out_5480754559180280437[17] = 0;
   out_5480754559180280437[18] = 0;
   out_5480754559180280437[19] = 0;
   out_5480754559180280437[20] = 0;
   out_5480754559180280437[21] = 0;
   out_5480754559180280437[22] = 1;
   out_5480754559180280437[23] = 0;
   out_5480754559180280437[24] = 0;
   out_5480754559180280437[25] = 0;
   out_5480754559180280437[26] = 0;
   out_5480754559180280437[27] = 0;
   out_5480754559180280437[28] = dt;
   out_5480754559180280437[29] = 0;
   out_5480754559180280437[30] = 0;
   out_5480754559180280437[31] = 0;
   out_5480754559180280437[32] = 0;
   out_5480754559180280437[33] = 0;
   out_5480754559180280437[34] = 0;
   out_5480754559180280437[35] = 0;
   out_5480754559180280437[36] = 0;
   out_5480754559180280437[37] = 0;
   out_5480754559180280437[38] = 0;
   out_5480754559180280437[39] = 0;
   out_5480754559180280437[40] = 0;
   out_5480754559180280437[41] = 0;
   out_5480754559180280437[42] = 0;
   out_5480754559180280437[43] = 0;
   out_5480754559180280437[44] = 1;
   out_5480754559180280437[45] = 0;
   out_5480754559180280437[46] = 0;
   out_5480754559180280437[47] = 0;
   out_5480754559180280437[48] = 0;
   out_5480754559180280437[49] = 0;
   out_5480754559180280437[50] = dt;
   out_5480754559180280437[51] = 0;
   out_5480754559180280437[52] = 0;
   out_5480754559180280437[53] = 0;
   out_5480754559180280437[54] = 0;
   out_5480754559180280437[55] = 0;
   out_5480754559180280437[56] = 0;
   out_5480754559180280437[57] = 0;
   out_5480754559180280437[58] = 0;
   out_5480754559180280437[59] = 0;
   out_5480754559180280437[60] = 0;
   out_5480754559180280437[61] = 0;
   out_5480754559180280437[62] = 0;
   out_5480754559180280437[63] = 0;
   out_5480754559180280437[64] = 0;
   out_5480754559180280437[65] = 0;
   out_5480754559180280437[66] = 1;
   out_5480754559180280437[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5480754559180280437[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5480754559180280437[69] = 0;
   out_5480754559180280437[70] = 0;
   out_5480754559180280437[71] = 0;
   out_5480754559180280437[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5480754559180280437[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5480754559180280437[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5480754559180280437[75] = 0;
   out_5480754559180280437[76] = 0;
   out_5480754559180280437[77] = 0;
   out_5480754559180280437[78] = 0;
   out_5480754559180280437[79] = 0;
   out_5480754559180280437[80] = 0;
   out_5480754559180280437[81] = 0;
   out_5480754559180280437[82] = 0;
   out_5480754559180280437[83] = 0;
   out_5480754559180280437[84] = 0;
   out_5480754559180280437[85] = 0;
   out_5480754559180280437[86] = 0;
   out_5480754559180280437[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5480754559180280437[88] = 1;
   out_5480754559180280437[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5480754559180280437[90] = 0;
   out_5480754559180280437[91] = 0;
   out_5480754559180280437[92] = 0;
   out_5480754559180280437[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5480754559180280437[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5480754559180280437[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5480754559180280437[96] = 0;
   out_5480754559180280437[97] = 0;
   out_5480754559180280437[98] = 0;
   out_5480754559180280437[99] = 0;
   out_5480754559180280437[100] = 0;
   out_5480754559180280437[101] = 0;
   out_5480754559180280437[102] = 0;
   out_5480754559180280437[103] = 0;
   out_5480754559180280437[104] = 0;
   out_5480754559180280437[105] = 0;
   out_5480754559180280437[106] = 0;
   out_5480754559180280437[107] = 0;
   out_5480754559180280437[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5480754559180280437[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5480754559180280437[110] = 1;
   out_5480754559180280437[111] = 0;
   out_5480754559180280437[112] = 0;
   out_5480754559180280437[113] = 0;
   out_5480754559180280437[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5480754559180280437[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5480754559180280437[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5480754559180280437[117] = 0;
   out_5480754559180280437[118] = 0;
   out_5480754559180280437[119] = 0;
   out_5480754559180280437[120] = 0;
   out_5480754559180280437[121] = 0;
   out_5480754559180280437[122] = 0;
   out_5480754559180280437[123] = 0;
   out_5480754559180280437[124] = 0;
   out_5480754559180280437[125] = 0;
   out_5480754559180280437[126] = 0;
   out_5480754559180280437[127] = 0;
   out_5480754559180280437[128] = 0;
   out_5480754559180280437[129] = 0;
   out_5480754559180280437[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5480754559180280437[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5480754559180280437[132] = 1;
   out_5480754559180280437[133] = 0;
   out_5480754559180280437[134] = 0;
   out_5480754559180280437[135] = 0;
   out_5480754559180280437[136] = 0;
   out_5480754559180280437[137] = 0;
   out_5480754559180280437[138] = 0;
   out_5480754559180280437[139] = 0;
   out_5480754559180280437[140] = 0;
   out_5480754559180280437[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5480754559180280437[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5480754559180280437[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5480754559180280437[144] = 0;
   out_5480754559180280437[145] = 0;
   out_5480754559180280437[146] = 0;
   out_5480754559180280437[147] = 0;
   out_5480754559180280437[148] = 0;
   out_5480754559180280437[149] = 0;
   out_5480754559180280437[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5480754559180280437[151] = 0;
   out_5480754559180280437[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5480754559180280437[153] = 0;
   out_5480754559180280437[154] = 1;
   out_5480754559180280437[155] = 0;
   out_5480754559180280437[156] = 0;
   out_5480754559180280437[157] = 0;
   out_5480754559180280437[158] = 0;
   out_5480754559180280437[159] = 0;
   out_5480754559180280437[160] = 0;
   out_5480754559180280437[161] = 0;
   out_5480754559180280437[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5480754559180280437[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5480754559180280437[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5480754559180280437[165] = 0;
   out_5480754559180280437[166] = 0;
   out_5480754559180280437[167] = 0;
   out_5480754559180280437[168] = 0;
   out_5480754559180280437[169] = 0;
   out_5480754559180280437[170] = 0;
   out_5480754559180280437[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5480754559180280437[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5480754559180280437[173] = 0;
   out_5480754559180280437[174] = 0;
   out_5480754559180280437[175] = 0;
   out_5480754559180280437[176] = 1;
   out_5480754559180280437[177] = 0;
   out_5480754559180280437[178] = 0;
   out_5480754559180280437[179] = 0;
   out_5480754559180280437[180] = 0;
   out_5480754559180280437[181] = 0;
   out_5480754559180280437[182] = 0;
   out_5480754559180280437[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5480754559180280437[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5480754559180280437[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5480754559180280437[186] = 0;
   out_5480754559180280437[187] = 0;
   out_5480754559180280437[188] = 0;
   out_5480754559180280437[189] = 0;
   out_5480754559180280437[190] = 0;
   out_5480754559180280437[191] = 0;
   out_5480754559180280437[192] = 0;
   out_5480754559180280437[193] = 0;
   out_5480754559180280437[194] = 0;
   out_5480754559180280437[195] = 0;
   out_5480754559180280437[196] = 0;
   out_5480754559180280437[197] = 0;
   out_5480754559180280437[198] = 1;
   out_5480754559180280437[199] = 0;
   out_5480754559180280437[200] = 0;
   out_5480754559180280437[201] = 0;
   out_5480754559180280437[202] = 0;
   out_5480754559180280437[203] = 0;
   out_5480754559180280437[204] = 0;
   out_5480754559180280437[205] = 0;
   out_5480754559180280437[206] = 0;
   out_5480754559180280437[207] = 0;
   out_5480754559180280437[208] = 0;
   out_5480754559180280437[209] = 0;
   out_5480754559180280437[210] = 0;
   out_5480754559180280437[211] = 0;
   out_5480754559180280437[212] = 0;
   out_5480754559180280437[213] = 0;
   out_5480754559180280437[214] = 0;
   out_5480754559180280437[215] = 0;
   out_5480754559180280437[216] = 0;
   out_5480754559180280437[217] = 0;
   out_5480754559180280437[218] = 0;
   out_5480754559180280437[219] = 0;
   out_5480754559180280437[220] = 1;
   out_5480754559180280437[221] = 0;
   out_5480754559180280437[222] = 0;
   out_5480754559180280437[223] = 0;
   out_5480754559180280437[224] = 0;
   out_5480754559180280437[225] = 0;
   out_5480754559180280437[226] = 0;
   out_5480754559180280437[227] = 0;
   out_5480754559180280437[228] = 0;
   out_5480754559180280437[229] = 0;
   out_5480754559180280437[230] = 0;
   out_5480754559180280437[231] = 0;
   out_5480754559180280437[232] = 0;
   out_5480754559180280437[233] = 0;
   out_5480754559180280437[234] = 0;
   out_5480754559180280437[235] = 0;
   out_5480754559180280437[236] = 0;
   out_5480754559180280437[237] = 0;
   out_5480754559180280437[238] = 0;
   out_5480754559180280437[239] = 0;
   out_5480754559180280437[240] = 0;
   out_5480754559180280437[241] = 0;
   out_5480754559180280437[242] = 1;
   out_5480754559180280437[243] = 0;
   out_5480754559180280437[244] = 0;
   out_5480754559180280437[245] = 0;
   out_5480754559180280437[246] = 0;
   out_5480754559180280437[247] = 0;
   out_5480754559180280437[248] = 0;
   out_5480754559180280437[249] = 0;
   out_5480754559180280437[250] = 0;
   out_5480754559180280437[251] = 0;
   out_5480754559180280437[252] = 0;
   out_5480754559180280437[253] = 0;
   out_5480754559180280437[254] = 0;
   out_5480754559180280437[255] = 0;
   out_5480754559180280437[256] = 0;
   out_5480754559180280437[257] = 0;
   out_5480754559180280437[258] = 0;
   out_5480754559180280437[259] = 0;
   out_5480754559180280437[260] = 0;
   out_5480754559180280437[261] = 0;
   out_5480754559180280437[262] = 0;
   out_5480754559180280437[263] = 0;
   out_5480754559180280437[264] = 1;
   out_5480754559180280437[265] = 0;
   out_5480754559180280437[266] = 0;
   out_5480754559180280437[267] = 0;
   out_5480754559180280437[268] = 0;
   out_5480754559180280437[269] = 0;
   out_5480754559180280437[270] = 0;
   out_5480754559180280437[271] = 0;
   out_5480754559180280437[272] = 0;
   out_5480754559180280437[273] = 0;
   out_5480754559180280437[274] = 0;
   out_5480754559180280437[275] = 0;
   out_5480754559180280437[276] = 0;
   out_5480754559180280437[277] = 0;
   out_5480754559180280437[278] = 0;
   out_5480754559180280437[279] = 0;
   out_5480754559180280437[280] = 0;
   out_5480754559180280437[281] = 0;
   out_5480754559180280437[282] = 0;
   out_5480754559180280437[283] = 0;
   out_5480754559180280437[284] = 0;
   out_5480754559180280437[285] = 0;
   out_5480754559180280437[286] = 1;
   out_5480754559180280437[287] = 0;
   out_5480754559180280437[288] = 0;
   out_5480754559180280437[289] = 0;
   out_5480754559180280437[290] = 0;
   out_5480754559180280437[291] = 0;
   out_5480754559180280437[292] = 0;
   out_5480754559180280437[293] = 0;
   out_5480754559180280437[294] = 0;
   out_5480754559180280437[295] = 0;
   out_5480754559180280437[296] = 0;
   out_5480754559180280437[297] = 0;
   out_5480754559180280437[298] = 0;
   out_5480754559180280437[299] = 0;
   out_5480754559180280437[300] = 0;
   out_5480754559180280437[301] = 0;
   out_5480754559180280437[302] = 0;
   out_5480754559180280437[303] = 0;
   out_5480754559180280437[304] = 0;
   out_5480754559180280437[305] = 0;
   out_5480754559180280437[306] = 0;
   out_5480754559180280437[307] = 0;
   out_5480754559180280437[308] = 1;
   out_5480754559180280437[309] = 0;
   out_5480754559180280437[310] = 0;
   out_5480754559180280437[311] = 0;
   out_5480754559180280437[312] = 0;
   out_5480754559180280437[313] = 0;
   out_5480754559180280437[314] = 0;
   out_5480754559180280437[315] = 0;
   out_5480754559180280437[316] = 0;
   out_5480754559180280437[317] = 0;
   out_5480754559180280437[318] = 0;
   out_5480754559180280437[319] = 0;
   out_5480754559180280437[320] = 0;
   out_5480754559180280437[321] = 0;
   out_5480754559180280437[322] = 0;
   out_5480754559180280437[323] = 0;
   out_5480754559180280437[324] = 0;
   out_5480754559180280437[325] = 0;
   out_5480754559180280437[326] = 0;
   out_5480754559180280437[327] = 0;
   out_5480754559180280437[328] = 0;
   out_5480754559180280437[329] = 0;
   out_5480754559180280437[330] = 1;
   out_5480754559180280437[331] = 0;
   out_5480754559180280437[332] = 0;
   out_5480754559180280437[333] = 0;
   out_5480754559180280437[334] = 0;
   out_5480754559180280437[335] = 0;
   out_5480754559180280437[336] = 0;
   out_5480754559180280437[337] = 0;
   out_5480754559180280437[338] = 0;
   out_5480754559180280437[339] = 0;
   out_5480754559180280437[340] = 0;
   out_5480754559180280437[341] = 0;
   out_5480754559180280437[342] = 0;
   out_5480754559180280437[343] = 0;
   out_5480754559180280437[344] = 0;
   out_5480754559180280437[345] = 0;
   out_5480754559180280437[346] = 0;
   out_5480754559180280437[347] = 0;
   out_5480754559180280437[348] = 0;
   out_5480754559180280437[349] = 0;
   out_5480754559180280437[350] = 0;
   out_5480754559180280437[351] = 0;
   out_5480754559180280437[352] = 1;
   out_5480754559180280437[353] = 0;
   out_5480754559180280437[354] = 0;
   out_5480754559180280437[355] = 0;
   out_5480754559180280437[356] = 0;
   out_5480754559180280437[357] = 0;
   out_5480754559180280437[358] = 0;
   out_5480754559180280437[359] = 0;
   out_5480754559180280437[360] = 0;
   out_5480754559180280437[361] = 0;
   out_5480754559180280437[362] = 0;
   out_5480754559180280437[363] = 0;
   out_5480754559180280437[364] = 0;
   out_5480754559180280437[365] = 0;
   out_5480754559180280437[366] = 0;
   out_5480754559180280437[367] = 0;
   out_5480754559180280437[368] = 0;
   out_5480754559180280437[369] = 0;
   out_5480754559180280437[370] = 0;
   out_5480754559180280437[371] = 0;
   out_5480754559180280437[372] = 0;
   out_5480754559180280437[373] = 0;
   out_5480754559180280437[374] = 1;
   out_5480754559180280437[375] = 0;
   out_5480754559180280437[376] = 0;
   out_5480754559180280437[377] = 0;
   out_5480754559180280437[378] = 0;
   out_5480754559180280437[379] = 0;
   out_5480754559180280437[380] = 0;
   out_5480754559180280437[381] = 0;
   out_5480754559180280437[382] = 0;
   out_5480754559180280437[383] = 0;
   out_5480754559180280437[384] = 0;
   out_5480754559180280437[385] = 0;
   out_5480754559180280437[386] = 0;
   out_5480754559180280437[387] = 0;
   out_5480754559180280437[388] = 0;
   out_5480754559180280437[389] = 0;
   out_5480754559180280437[390] = 0;
   out_5480754559180280437[391] = 0;
   out_5480754559180280437[392] = 0;
   out_5480754559180280437[393] = 0;
   out_5480754559180280437[394] = 0;
   out_5480754559180280437[395] = 0;
   out_5480754559180280437[396] = 1;
   out_5480754559180280437[397] = 0;
   out_5480754559180280437[398] = 0;
   out_5480754559180280437[399] = 0;
   out_5480754559180280437[400] = 0;
   out_5480754559180280437[401] = 0;
   out_5480754559180280437[402] = 0;
   out_5480754559180280437[403] = 0;
   out_5480754559180280437[404] = 0;
   out_5480754559180280437[405] = 0;
   out_5480754559180280437[406] = 0;
   out_5480754559180280437[407] = 0;
   out_5480754559180280437[408] = 0;
   out_5480754559180280437[409] = 0;
   out_5480754559180280437[410] = 0;
   out_5480754559180280437[411] = 0;
   out_5480754559180280437[412] = 0;
   out_5480754559180280437[413] = 0;
   out_5480754559180280437[414] = 0;
   out_5480754559180280437[415] = 0;
   out_5480754559180280437[416] = 0;
   out_5480754559180280437[417] = 0;
   out_5480754559180280437[418] = 1;
   out_5480754559180280437[419] = 0;
   out_5480754559180280437[420] = 0;
   out_5480754559180280437[421] = 0;
   out_5480754559180280437[422] = 0;
   out_5480754559180280437[423] = 0;
   out_5480754559180280437[424] = 0;
   out_5480754559180280437[425] = 0;
   out_5480754559180280437[426] = 0;
   out_5480754559180280437[427] = 0;
   out_5480754559180280437[428] = 0;
   out_5480754559180280437[429] = 0;
   out_5480754559180280437[430] = 0;
   out_5480754559180280437[431] = 0;
   out_5480754559180280437[432] = 0;
   out_5480754559180280437[433] = 0;
   out_5480754559180280437[434] = 0;
   out_5480754559180280437[435] = 0;
   out_5480754559180280437[436] = 0;
   out_5480754559180280437[437] = 0;
   out_5480754559180280437[438] = 0;
   out_5480754559180280437[439] = 0;
   out_5480754559180280437[440] = 1;
}
void h_4(double *state, double *unused, double *out_401284292074783206) {
   out_401284292074783206[0] = state[10] + state[13];
   out_401284292074783206[1] = state[11] + state[14];
   out_401284292074783206[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3519454863506354843) {
   out_3519454863506354843[0] = 0;
   out_3519454863506354843[1] = 0;
   out_3519454863506354843[2] = 0;
   out_3519454863506354843[3] = 0;
   out_3519454863506354843[4] = 0;
   out_3519454863506354843[5] = 0;
   out_3519454863506354843[6] = 0;
   out_3519454863506354843[7] = 0;
   out_3519454863506354843[8] = 0;
   out_3519454863506354843[9] = 0;
   out_3519454863506354843[10] = 1;
   out_3519454863506354843[11] = 0;
   out_3519454863506354843[12] = 0;
   out_3519454863506354843[13] = 1;
   out_3519454863506354843[14] = 0;
   out_3519454863506354843[15] = 0;
   out_3519454863506354843[16] = 0;
   out_3519454863506354843[17] = 0;
   out_3519454863506354843[18] = 0;
   out_3519454863506354843[19] = 0;
   out_3519454863506354843[20] = 0;
   out_3519454863506354843[21] = 0;
   out_3519454863506354843[22] = 0;
   out_3519454863506354843[23] = 0;
   out_3519454863506354843[24] = 0;
   out_3519454863506354843[25] = 0;
   out_3519454863506354843[26] = 0;
   out_3519454863506354843[27] = 0;
   out_3519454863506354843[28] = 0;
   out_3519454863506354843[29] = 0;
   out_3519454863506354843[30] = 0;
   out_3519454863506354843[31] = 0;
   out_3519454863506354843[32] = 0;
   out_3519454863506354843[33] = 1;
   out_3519454863506354843[34] = 0;
   out_3519454863506354843[35] = 0;
   out_3519454863506354843[36] = 1;
   out_3519454863506354843[37] = 0;
   out_3519454863506354843[38] = 0;
   out_3519454863506354843[39] = 0;
   out_3519454863506354843[40] = 0;
   out_3519454863506354843[41] = 0;
   out_3519454863506354843[42] = 0;
   out_3519454863506354843[43] = 0;
   out_3519454863506354843[44] = 0;
   out_3519454863506354843[45] = 0;
   out_3519454863506354843[46] = 0;
   out_3519454863506354843[47] = 0;
   out_3519454863506354843[48] = 0;
   out_3519454863506354843[49] = 0;
   out_3519454863506354843[50] = 0;
   out_3519454863506354843[51] = 0;
   out_3519454863506354843[52] = 0;
   out_3519454863506354843[53] = 0;
   out_3519454863506354843[54] = 0;
   out_3519454863506354843[55] = 0;
   out_3519454863506354843[56] = 1;
   out_3519454863506354843[57] = 0;
   out_3519454863506354843[58] = 0;
   out_3519454863506354843[59] = 1;
   out_3519454863506354843[60] = 0;
   out_3519454863506354843[61] = 0;
   out_3519454863506354843[62] = 0;
   out_3519454863506354843[63] = 0;
   out_3519454863506354843[64] = 0;
   out_3519454863506354843[65] = 0;
}
void h_9(double *state, double *unused, double *out_6469163290663361896) {
   out_6469163290663361896[0] = state[10];
   out_6469163290663361896[1] = state[11];
   out_6469163290663361896[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7640070274938749303) {
   out_7640070274938749303[0] = 0;
   out_7640070274938749303[1] = 0;
   out_7640070274938749303[2] = 0;
   out_7640070274938749303[3] = 0;
   out_7640070274938749303[4] = 0;
   out_7640070274938749303[5] = 0;
   out_7640070274938749303[6] = 0;
   out_7640070274938749303[7] = 0;
   out_7640070274938749303[8] = 0;
   out_7640070274938749303[9] = 0;
   out_7640070274938749303[10] = 1;
   out_7640070274938749303[11] = 0;
   out_7640070274938749303[12] = 0;
   out_7640070274938749303[13] = 0;
   out_7640070274938749303[14] = 0;
   out_7640070274938749303[15] = 0;
   out_7640070274938749303[16] = 0;
   out_7640070274938749303[17] = 0;
   out_7640070274938749303[18] = 0;
   out_7640070274938749303[19] = 0;
   out_7640070274938749303[20] = 0;
   out_7640070274938749303[21] = 0;
   out_7640070274938749303[22] = 0;
   out_7640070274938749303[23] = 0;
   out_7640070274938749303[24] = 0;
   out_7640070274938749303[25] = 0;
   out_7640070274938749303[26] = 0;
   out_7640070274938749303[27] = 0;
   out_7640070274938749303[28] = 0;
   out_7640070274938749303[29] = 0;
   out_7640070274938749303[30] = 0;
   out_7640070274938749303[31] = 0;
   out_7640070274938749303[32] = 0;
   out_7640070274938749303[33] = 1;
   out_7640070274938749303[34] = 0;
   out_7640070274938749303[35] = 0;
   out_7640070274938749303[36] = 0;
   out_7640070274938749303[37] = 0;
   out_7640070274938749303[38] = 0;
   out_7640070274938749303[39] = 0;
   out_7640070274938749303[40] = 0;
   out_7640070274938749303[41] = 0;
   out_7640070274938749303[42] = 0;
   out_7640070274938749303[43] = 0;
   out_7640070274938749303[44] = 0;
   out_7640070274938749303[45] = 0;
   out_7640070274938749303[46] = 0;
   out_7640070274938749303[47] = 0;
   out_7640070274938749303[48] = 0;
   out_7640070274938749303[49] = 0;
   out_7640070274938749303[50] = 0;
   out_7640070274938749303[51] = 0;
   out_7640070274938749303[52] = 0;
   out_7640070274938749303[53] = 0;
   out_7640070274938749303[54] = 0;
   out_7640070274938749303[55] = 0;
   out_7640070274938749303[56] = 1;
   out_7640070274938749303[57] = 0;
   out_7640070274938749303[58] = 0;
   out_7640070274938749303[59] = 0;
   out_7640070274938749303[60] = 0;
   out_7640070274938749303[61] = 0;
   out_7640070274938749303[62] = 0;
   out_7640070274938749303[63] = 0;
   out_7640070274938749303[64] = 0;
   out_7640070274938749303[65] = 0;
}
void h_10(double *state, double *unused, double *out_3035724408359026182) {
   out_3035724408359026182[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3035724408359026182[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3035724408359026182[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5367808086823923002) {
   out_5367808086823923002[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5367808086823923002[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5367808086823923002[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5367808086823923002[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5367808086823923002[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5367808086823923002[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5367808086823923002[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5367808086823923002[7] = 0;
   out_5367808086823923002[8] = 0;
   out_5367808086823923002[9] = 0;
   out_5367808086823923002[10] = 0;
   out_5367808086823923002[11] = 0;
   out_5367808086823923002[12] = 0;
   out_5367808086823923002[13] = 0;
   out_5367808086823923002[14] = 0;
   out_5367808086823923002[15] = 0;
   out_5367808086823923002[16] = 1;
   out_5367808086823923002[17] = 0;
   out_5367808086823923002[18] = 0;
   out_5367808086823923002[19] = 1;
   out_5367808086823923002[20] = 0;
   out_5367808086823923002[21] = 0;
   out_5367808086823923002[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5367808086823923002[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5367808086823923002[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5367808086823923002[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5367808086823923002[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5367808086823923002[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5367808086823923002[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5367808086823923002[29] = 0;
   out_5367808086823923002[30] = 0;
   out_5367808086823923002[31] = 0;
   out_5367808086823923002[32] = 0;
   out_5367808086823923002[33] = 0;
   out_5367808086823923002[34] = 0;
   out_5367808086823923002[35] = 0;
   out_5367808086823923002[36] = 0;
   out_5367808086823923002[37] = 0;
   out_5367808086823923002[38] = 0;
   out_5367808086823923002[39] = 1;
   out_5367808086823923002[40] = 0;
   out_5367808086823923002[41] = 0;
   out_5367808086823923002[42] = 1;
   out_5367808086823923002[43] = 0;
   out_5367808086823923002[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5367808086823923002[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5367808086823923002[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5367808086823923002[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5367808086823923002[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5367808086823923002[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5367808086823923002[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5367808086823923002[51] = 0;
   out_5367808086823923002[52] = 0;
   out_5367808086823923002[53] = 0;
   out_5367808086823923002[54] = 0;
   out_5367808086823923002[55] = 0;
   out_5367808086823923002[56] = 0;
   out_5367808086823923002[57] = 0;
   out_5367808086823923002[58] = 0;
   out_5367808086823923002[59] = 0;
   out_5367808086823923002[60] = 0;
   out_5367808086823923002[61] = 0;
   out_5367808086823923002[62] = 1;
   out_5367808086823923002[63] = 0;
   out_5367808086823923002[64] = 0;
   out_5367808086823923002[65] = 1;
}
void h_12(double *state, double *unused, double *out_2685219580534383655) {
   out_2685219580534383655[0] = state[0];
   out_2685219580534383655[1] = state[1];
   out_2685219580534383655[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8538911271538316638) {
   out_8538911271538316638[0] = 1;
   out_8538911271538316638[1] = 0;
   out_8538911271538316638[2] = 0;
   out_8538911271538316638[3] = 0;
   out_8538911271538316638[4] = 0;
   out_8538911271538316638[5] = 0;
   out_8538911271538316638[6] = 0;
   out_8538911271538316638[7] = 0;
   out_8538911271538316638[8] = 0;
   out_8538911271538316638[9] = 0;
   out_8538911271538316638[10] = 0;
   out_8538911271538316638[11] = 0;
   out_8538911271538316638[12] = 0;
   out_8538911271538316638[13] = 0;
   out_8538911271538316638[14] = 0;
   out_8538911271538316638[15] = 0;
   out_8538911271538316638[16] = 0;
   out_8538911271538316638[17] = 0;
   out_8538911271538316638[18] = 0;
   out_8538911271538316638[19] = 0;
   out_8538911271538316638[20] = 0;
   out_8538911271538316638[21] = 0;
   out_8538911271538316638[22] = 0;
   out_8538911271538316638[23] = 1;
   out_8538911271538316638[24] = 0;
   out_8538911271538316638[25] = 0;
   out_8538911271538316638[26] = 0;
   out_8538911271538316638[27] = 0;
   out_8538911271538316638[28] = 0;
   out_8538911271538316638[29] = 0;
   out_8538911271538316638[30] = 0;
   out_8538911271538316638[31] = 0;
   out_8538911271538316638[32] = 0;
   out_8538911271538316638[33] = 0;
   out_8538911271538316638[34] = 0;
   out_8538911271538316638[35] = 0;
   out_8538911271538316638[36] = 0;
   out_8538911271538316638[37] = 0;
   out_8538911271538316638[38] = 0;
   out_8538911271538316638[39] = 0;
   out_8538911271538316638[40] = 0;
   out_8538911271538316638[41] = 0;
   out_8538911271538316638[42] = 0;
   out_8538911271538316638[43] = 0;
   out_8538911271538316638[44] = 0;
   out_8538911271538316638[45] = 0;
   out_8538911271538316638[46] = 1;
   out_8538911271538316638[47] = 0;
   out_8538911271538316638[48] = 0;
   out_8538911271538316638[49] = 0;
   out_8538911271538316638[50] = 0;
   out_8538911271538316638[51] = 0;
   out_8538911271538316638[52] = 0;
   out_8538911271538316638[53] = 0;
   out_8538911271538316638[54] = 0;
   out_8538911271538316638[55] = 0;
   out_8538911271538316638[56] = 0;
   out_8538911271538316638[57] = 0;
   out_8538911271538316638[58] = 0;
   out_8538911271538316638[59] = 0;
   out_8538911271538316638[60] = 0;
   out_8538911271538316638[61] = 0;
   out_8538911271538316638[62] = 0;
   out_8538911271538316638[63] = 0;
   out_8538911271538316638[64] = 0;
   out_8538911271538316638[65] = 0;
}
void h_35(double *state, double *unused, double *out_1040527124124271540) {
   out_1040527124124271540[0] = state[7];
   out_1040527124124271540[1] = state[8];
   out_1040527124124271540[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6886116920878962219) {
   out_6886116920878962219[0] = 0;
   out_6886116920878962219[1] = 0;
   out_6886116920878962219[2] = 0;
   out_6886116920878962219[3] = 0;
   out_6886116920878962219[4] = 0;
   out_6886116920878962219[5] = 0;
   out_6886116920878962219[6] = 0;
   out_6886116920878962219[7] = 1;
   out_6886116920878962219[8] = 0;
   out_6886116920878962219[9] = 0;
   out_6886116920878962219[10] = 0;
   out_6886116920878962219[11] = 0;
   out_6886116920878962219[12] = 0;
   out_6886116920878962219[13] = 0;
   out_6886116920878962219[14] = 0;
   out_6886116920878962219[15] = 0;
   out_6886116920878962219[16] = 0;
   out_6886116920878962219[17] = 0;
   out_6886116920878962219[18] = 0;
   out_6886116920878962219[19] = 0;
   out_6886116920878962219[20] = 0;
   out_6886116920878962219[21] = 0;
   out_6886116920878962219[22] = 0;
   out_6886116920878962219[23] = 0;
   out_6886116920878962219[24] = 0;
   out_6886116920878962219[25] = 0;
   out_6886116920878962219[26] = 0;
   out_6886116920878962219[27] = 0;
   out_6886116920878962219[28] = 0;
   out_6886116920878962219[29] = 0;
   out_6886116920878962219[30] = 1;
   out_6886116920878962219[31] = 0;
   out_6886116920878962219[32] = 0;
   out_6886116920878962219[33] = 0;
   out_6886116920878962219[34] = 0;
   out_6886116920878962219[35] = 0;
   out_6886116920878962219[36] = 0;
   out_6886116920878962219[37] = 0;
   out_6886116920878962219[38] = 0;
   out_6886116920878962219[39] = 0;
   out_6886116920878962219[40] = 0;
   out_6886116920878962219[41] = 0;
   out_6886116920878962219[42] = 0;
   out_6886116920878962219[43] = 0;
   out_6886116920878962219[44] = 0;
   out_6886116920878962219[45] = 0;
   out_6886116920878962219[46] = 0;
   out_6886116920878962219[47] = 0;
   out_6886116920878962219[48] = 0;
   out_6886116920878962219[49] = 0;
   out_6886116920878962219[50] = 0;
   out_6886116920878962219[51] = 0;
   out_6886116920878962219[52] = 0;
   out_6886116920878962219[53] = 1;
   out_6886116920878962219[54] = 0;
   out_6886116920878962219[55] = 0;
   out_6886116920878962219[56] = 0;
   out_6886116920878962219[57] = 0;
   out_6886116920878962219[58] = 0;
   out_6886116920878962219[59] = 0;
   out_6886116920878962219[60] = 0;
   out_6886116920878962219[61] = 0;
   out_6886116920878962219[62] = 0;
   out_6886116920878962219[63] = 0;
   out_6886116920878962219[64] = 0;
   out_6886116920878962219[65] = 0;
}
void h_32(double *state, double *unused, double *out_5067673893183247419) {
   out_5067673893183247419[0] = state[3];
   out_5067673893183247419[1] = state[4];
   out_5067673893183247419[2] = state[5];
   out_5067673893183247419[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5759322780622976839) {
   out_5759322780622976839[0] = 0;
   out_5759322780622976839[1] = 0;
   out_5759322780622976839[2] = 0;
   out_5759322780622976839[3] = 1;
   out_5759322780622976839[4] = 0;
   out_5759322780622976839[5] = 0;
   out_5759322780622976839[6] = 0;
   out_5759322780622976839[7] = 0;
   out_5759322780622976839[8] = 0;
   out_5759322780622976839[9] = 0;
   out_5759322780622976839[10] = 0;
   out_5759322780622976839[11] = 0;
   out_5759322780622976839[12] = 0;
   out_5759322780622976839[13] = 0;
   out_5759322780622976839[14] = 0;
   out_5759322780622976839[15] = 0;
   out_5759322780622976839[16] = 0;
   out_5759322780622976839[17] = 0;
   out_5759322780622976839[18] = 0;
   out_5759322780622976839[19] = 0;
   out_5759322780622976839[20] = 0;
   out_5759322780622976839[21] = 0;
   out_5759322780622976839[22] = 0;
   out_5759322780622976839[23] = 0;
   out_5759322780622976839[24] = 0;
   out_5759322780622976839[25] = 0;
   out_5759322780622976839[26] = 1;
   out_5759322780622976839[27] = 0;
   out_5759322780622976839[28] = 0;
   out_5759322780622976839[29] = 0;
   out_5759322780622976839[30] = 0;
   out_5759322780622976839[31] = 0;
   out_5759322780622976839[32] = 0;
   out_5759322780622976839[33] = 0;
   out_5759322780622976839[34] = 0;
   out_5759322780622976839[35] = 0;
   out_5759322780622976839[36] = 0;
   out_5759322780622976839[37] = 0;
   out_5759322780622976839[38] = 0;
   out_5759322780622976839[39] = 0;
   out_5759322780622976839[40] = 0;
   out_5759322780622976839[41] = 0;
   out_5759322780622976839[42] = 0;
   out_5759322780622976839[43] = 0;
   out_5759322780622976839[44] = 0;
   out_5759322780622976839[45] = 0;
   out_5759322780622976839[46] = 0;
   out_5759322780622976839[47] = 0;
   out_5759322780622976839[48] = 0;
   out_5759322780622976839[49] = 1;
   out_5759322780622976839[50] = 0;
   out_5759322780622976839[51] = 0;
   out_5759322780622976839[52] = 0;
   out_5759322780622976839[53] = 0;
   out_5759322780622976839[54] = 0;
   out_5759322780622976839[55] = 0;
   out_5759322780622976839[56] = 0;
   out_5759322780622976839[57] = 0;
   out_5759322780622976839[58] = 0;
   out_5759322780622976839[59] = 0;
   out_5759322780622976839[60] = 0;
   out_5759322780622976839[61] = 0;
   out_5759322780622976839[62] = 0;
   out_5759322780622976839[63] = 0;
   out_5759322780622976839[64] = 0;
   out_5759322780622976839[65] = 0;
   out_5759322780622976839[66] = 0;
   out_5759322780622976839[67] = 0;
   out_5759322780622976839[68] = 0;
   out_5759322780622976839[69] = 0;
   out_5759322780622976839[70] = 0;
   out_5759322780622976839[71] = 0;
   out_5759322780622976839[72] = 1;
   out_5759322780622976839[73] = 0;
   out_5759322780622976839[74] = 0;
   out_5759322780622976839[75] = 0;
   out_5759322780622976839[76] = 0;
   out_5759322780622976839[77] = 0;
   out_5759322780622976839[78] = 0;
   out_5759322780622976839[79] = 0;
   out_5759322780622976839[80] = 0;
   out_5759322780622976839[81] = 0;
   out_5759322780622976839[82] = 0;
   out_5759322780622976839[83] = 0;
   out_5759322780622976839[84] = 0;
   out_5759322780622976839[85] = 0;
   out_5759322780622976839[86] = 0;
   out_5759322780622976839[87] = 0;
}
void h_13(double *state, double *unused, double *out_1605415305938632325) {
   out_1605415305938632325[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1605415305938632325[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1605415305938632325[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_863508566724709031) {
   out_863508566724709031[0] = 0;
   out_863508566724709031[1] = 0;
   out_863508566724709031[2] = 0;
   out_863508566724709031[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_863508566724709031[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_863508566724709031[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_863508566724709031[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_863508566724709031[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_863508566724709031[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_863508566724709031[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_863508566724709031[10] = 0;
   out_863508566724709031[11] = 0;
   out_863508566724709031[12] = 0;
   out_863508566724709031[13] = 0;
   out_863508566724709031[14] = 0;
   out_863508566724709031[15] = 0;
   out_863508566724709031[16] = 0;
   out_863508566724709031[17] = 0;
   out_863508566724709031[18] = 0;
   out_863508566724709031[19] = 0;
   out_863508566724709031[20] = 0;
   out_863508566724709031[21] = 0;
   out_863508566724709031[22] = 0;
   out_863508566724709031[23] = 0;
   out_863508566724709031[24] = 0;
   out_863508566724709031[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_863508566724709031[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_863508566724709031[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_863508566724709031[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_863508566724709031[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_863508566724709031[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_863508566724709031[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_863508566724709031[32] = 0;
   out_863508566724709031[33] = 0;
   out_863508566724709031[34] = 0;
   out_863508566724709031[35] = 0;
   out_863508566724709031[36] = 0;
   out_863508566724709031[37] = 0;
   out_863508566724709031[38] = 0;
   out_863508566724709031[39] = 0;
   out_863508566724709031[40] = 0;
   out_863508566724709031[41] = 0;
   out_863508566724709031[42] = 0;
   out_863508566724709031[43] = 0;
   out_863508566724709031[44] = 0;
   out_863508566724709031[45] = 0;
   out_863508566724709031[46] = 0;
   out_863508566724709031[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_863508566724709031[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_863508566724709031[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_863508566724709031[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_863508566724709031[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_863508566724709031[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_863508566724709031[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_863508566724709031[54] = 0;
   out_863508566724709031[55] = 0;
   out_863508566724709031[56] = 0;
   out_863508566724709031[57] = 0;
   out_863508566724709031[58] = 0;
   out_863508566724709031[59] = 0;
   out_863508566724709031[60] = 0;
   out_863508566724709031[61] = 0;
   out_863508566724709031[62] = 0;
   out_863508566724709031[63] = 0;
   out_863508566724709031[64] = 0;
   out_863508566724709031[65] = 0;
}
void h_14(double *state, double *unused, double *out_6469163290663361896) {
   out_6469163290663361896[0] = state[10];
   out_6469163290663361896[1] = state[11];
   out_6469163290663361896[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7640070274938749303) {
   out_7640070274938749303[0] = 0;
   out_7640070274938749303[1] = 0;
   out_7640070274938749303[2] = 0;
   out_7640070274938749303[3] = 0;
   out_7640070274938749303[4] = 0;
   out_7640070274938749303[5] = 0;
   out_7640070274938749303[6] = 0;
   out_7640070274938749303[7] = 0;
   out_7640070274938749303[8] = 0;
   out_7640070274938749303[9] = 0;
   out_7640070274938749303[10] = 1;
   out_7640070274938749303[11] = 0;
   out_7640070274938749303[12] = 0;
   out_7640070274938749303[13] = 0;
   out_7640070274938749303[14] = 0;
   out_7640070274938749303[15] = 0;
   out_7640070274938749303[16] = 0;
   out_7640070274938749303[17] = 0;
   out_7640070274938749303[18] = 0;
   out_7640070274938749303[19] = 0;
   out_7640070274938749303[20] = 0;
   out_7640070274938749303[21] = 0;
   out_7640070274938749303[22] = 0;
   out_7640070274938749303[23] = 0;
   out_7640070274938749303[24] = 0;
   out_7640070274938749303[25] = 0;
   out_7640070274938749303[26] = 0;
   out_7640070274938749303[27] = 0;
   out_7640070274938749303[28] = 0;
   out_7640070274938749303[29] = 0;
   out_7640070274938749303[30] = 0;
   out_7640070274938749303[31] = 0;
   out_7640070274938749303[32] = 0;
   out_7640070274938749303[33] = 1;
   out_7640070274938749303[34] = 0;
   out_7640070274938749303[35] = 0;
   out_7640070274938749303[36] = 0;
   out_7640070274938749303[37] = 0;
   out_7640070274938749303[38] = 0;
   out_7640070274938749303[39] = 0;
   out_7640070274938749303[40] = 0;
   out_7640070274938749303[41] = 0;
   out_7640070274938749303[42] = 0;
   out_7640070274938749303[43] = 0;
   out_7640070274938749303[44] = 0;
   out_7640070274938749303[45] = 0;
   out_7640070274938749303[46] = 0;
   out_7640070274938749303[47] = 0;
   out_7640070274938749303[48] = 0;
   out_7640070274938749303[49] = 0;
   out_7640070274938749303[50] = 0;
   out_7640070274938749303[51] = 0;
   out_7640070274938749303[52] = 0;
   out_7640070274938749303[53] = 0;
   out_7640070274938749303[54] = 0;
   out_7640070274938749303[55] = 0;
   out_7640070274938749303[56] = 1;
   out_7640070274938749303[57] = 0;
   out_7640070274938749303[58] = 0;
   out_7640070274938749303[59] = 0;
   out_7640070274938749303[60] = 0;
   out_7640070274938749303[61] = 0;
   out_7640070274938749303[62] = 0;
   out_7640070274938749303[63] = 0;
   out_7640070274938749303[64] = 0;
   out_7640070274938749303[65] = 0;
}
void h_33(double *state, double *unused, double *out_3835180837527987847) {
   out_3835180837527987847[0] = state[16];
   out_3835180837527987847[1] = state[17];
   out_3835180837527987847[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8410070148191731793) {
   out_8410070148191731793[0] = 0;
   out_8410070148191731793[1] = 0;
   out_8410070148191731793[2] = 0;
   out_8410070148191731793[3] = 0;
   out_8410070148191731793[4] = 0;
   out_8410070148191731793[5] = 0;
   out_8410070148191731793[6] = 0;
   out_8410070148191731793[7] = 0;
   out_8410070148191731793[8] = 0;
   out_8410070148191731793[9] = 0;
   out_8410070148191731793[10] = 0;
   out_8410070148191731793[11] = 0;
   out_8410070148191731793[12] = 0;
   out_8410070148191731793[13] = 0;
   out_8410070148191731793[14] = 0;
   out_8410070148191731793[15] = 0;
   out_8410070148191731793[16] = 1;
   out_8410070148191731793[17] = 0;
   out_8410070148191731793[18] = 0;
   out_8410070148191731793[19] = 0;
   out_8410070148191731793[20] = 0;
   out_8410070148191731793[21] = 0;
   out_8410070148191731793[22] = 0;
   out_8410070148191731793[23] = 0;
   out_8410070148191731793[24] = 0;
   out_8410070148191731793[25] = 0;
   out_8410070148191731793[26] = 0;
   out_8410070148191731793[27] = 0;
   out_8410070148191731793[28] = 0;
   out_8410070148191731793[29] = 0;
   out_8410070148191731793[30] = 0;
   out_8410070148191731793[31] = 0;
   out_8410070148191731793[32] = 0;
   out_8410070148191731793[33] = 0;
   out_8410070148191731793[34] = 0;
   out_8410070148191731793[35] = 0;
   out_8410070148191731793[36] = 0;
   out_8410070148191731793[37] = 0;
   out_8410070148191731793[38] = 0;
   out_8410070148191731793[39] = 1;
   out_8410070148191731793[40] = 0;
   out_8410070148191731793[41] = 0;
   out_8410070148191731793[42] = 0;
   out_8410070148191731793[43] = 0;
   out_8410070148191731793[44] = 0;
   out_8410070148191731793[45] = 0;
   out_8410070148191731793[46] = 0;
   out_8410070148191731793[47] = 0;
   out_8410070148191731793[48] = 0;
   out_8410070148191731793[49] = 0;
   out_8410070148191731793[50] = 0;
   out_8410070148191731793[51] = 0;
   out_8410070148191731793[52] = 0;
   out_8410070148191731793[53] = 0;
   out_8410070148191731793[54] = 0;
   out_8410070148191731793[55] = 0;
   out_8410070148191731793[56] = 0;
   out_8410070148191731793[57] = 0;
   out_8410070148191731793[58] = 0;
   out_8410070148191731793[59] = 0;
   out_8410070148191731793[60] = 0;
   out_8410070148191731793[61] = 0;
   out_8410070148191731793[62] = 1;
   out_8410070148191731793[63] = 0;
   out_8410070148191731793[64] = 0;
   out_8410070148191731793[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5864220398347747596) {
  H(in_vec, out_5864220398347747596);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2500085137790340427) {
  err_fun(nom_x, delta_x, out_2500085137790340427);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5850215098972926867) {
  inv_err_fun(nom_x, true_x, out_5850215098972926867);
}
void live_H_mod_fun(double *state, double *out_8835204987853825536) {
  H_mod_fun(state, out_8835204987853825536);
}
void live_f_fun(double *state, double dt, double *out_127607991900174595) {
  f_fun(state,  dt, out_127607991900174595);
}
void live_F_fun(double *state, double dt, double *out_5480754559180280437) {
  F_fun(state,  dt, out_5480754559180280437);
}
void live_h_4(double *state, double *unused, double *out_401284292074783206) {
  h_4(state, unused, out_401284292074783206);
}
void live_H_4(double *state, double *unused, double *out_3519454863506354843) {
  H_4(state, unused, out_3519454863506354843);
}
void live_h_9(double *state, double *unused, double *out_6469163290663361896) {
  h_9(state, unused, out_6469163290663361896);
}
void live_H_9(double *state, double *unused, double *out_7640070274938749303) {
  H_9(state, unused, out_7640070274938749303);
}
void live_h_10(double *state, double *unused, double *out_3035724408359026182) {
  h_10(state, unused, out_3035724408359026182);
}
void live_H_10(double *state, double *unused, double *out_5367808086823923002) {
  H_10(state, unused, out_5367808086823923002);
}
void live_h_12(double *state, double *unused, double *out_2685219580534383655) {
  h_12(state, unused, out_2685219580534383655);
}
void live_H_12(double *state, double *unused, double *out_8538911271538316638) {
  H_12(state, unused, out_8538911271538316638);
}
void live_h_35(double *state, double *unused, double *out_1040527124124271540) {
  h_35(state, unused, out_1040527124124271540);
}
void live_H_35(double *state, double *unused, double *out_6886116920878962219) {
  H_35(state, unused, out_6886116920878962219);
}
void live_h_32(double *state, double *unused, double *out_5067673893183247419) {
  h_32(state, unused, out_5067673893183247419);
}
void live_H_32(double *state, double *unused, double *out_5759322780622976839) {
  H_32(state, unused, out_5759322780622976839);
}
void live_h_13(double *state, double *unused, double *out_1605415305938632325) {
  h_13(state, unused, out_1605415305938632325);
}
void live_H_13(double *state, double *unused, double *out_863508566724709031) {
  H_13(state, unused, out_863508566724709031);
}
void live_h_14(double *state, double *unused, double *out_6469163290663361896) {
  h_14(state, unused, out_6469163290663361896);
}
void live_H_14(double *state, double *unused, double *out_7640070274938749303) {
  H_14(state, unused, out_7640070274938749303);
}
void live_h_33(double *state, double *unused, double *out_3835180837527987847) {
  h_33(state, unused, out_3835180837527987847);
}
void live_H_33(double *state, double *unused, double *out_8410070148191731793) {
  H_33(state, unused, out_8410070148191731793);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
